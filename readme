##Contact Management Backend.

Overview:
This project is a backend application for a contact management system, allowing users to perform CRUD operations on their contacts. It includes functionalities for user authentication using JSON Web Tokens (JWT). The API documentation can be accessed at http://localhost:3000/api-docs.

Technologies Used:
Node.js: Environment for running JavaScript code.
Express.js: Web application framework for Node.js, used for creating the server.
JSON Web Tokens (JWT): Used for user authentication and session management.
MongoDB: Database for storing contact information.
Mongoose: MongoDB object modeling tool.
Other dependencies: Refer to package.json for the complete list of dependencies.
How to Use:
Clone the Repository:

bash
Copy code
git clone https://github.com/your-username/contact-management-backend.git
Install Dependencies:

bash
Copy code
cd contact-management-backend
npm install
Set Up Environment Variables:

Create a .env file in the root directory.
Define the following environment variables:
makefile
Copy code
PORT=3000
MONGODB_URI=your_mongodb_connection_string
JWT_SECRET=your_jwt_secret_key
Run the Server:

bash
Copy code
npm start
Access the API Documentation:

Open your web browser and navigate to http://localhost:3000/api-docs.
Here, you can find detailed information about the available endpoints and how to use them.
Perform CRUD Operations:

Utilize the endpoints documented in the API documentation to manage your contacts.
Use tools like Postman or curl to make requests to the server.
Ensure proper authentication by including JWT tokens in the request headers where required.
API Endpoints:
/api/contacts: Endpoint for managing contacts (CRUD operations).
/api/auth/register: Endpoint for user registration.
/api/auth/login: Endpoint for user login to obtain JWT tokens.
/api-docs: Swagger UI documentation for exploring and testing API endpoints.
Note:
Ensure that MongoDB is running and accessible via the connection string provided in the .env file.
Replace your_mongodb_connection_string and your_jwt_secret_key with your actual MongoDB connection string and JWT secret key respectively.
Customize the project as per your requirements and extend functionalities if needed.
Feel free to reach out if you have any questions or need further assistance!